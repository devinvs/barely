use std::collections::HashMap;

lazy_static! {
    pub static ref SYSCALLS: HashMap<&'static str, u64> = {
        let mut m = HashMap::new();

        m.insert("shmdt", 67);
        m.insert("setsid", 112);
        m.insert("msgget", 68);
        m.insert("read", 0);
        m.insert("write", 1);
        m.insert("open", 2);
        m.insert("close", 3);
        m.insert("stat", 4);
        m.insert("fstat", 5);
        m.insert("lstat", 6);
        m.insert("poll", 7);
        m.insert("lseek", 8);
        m.insert("mmap", 9);
        m.insert("mprotect", 10);
        m.insert("munmap", 11);
        m.insert("brk", 12);
        m.insert("rt_sigaction", 13);
        m.insert("rt_sigprocmask", 14);
        m.insert("rt_sigreturn", 15);
        m.insert("ioctl", 16);
        m.insert("pread64", 17);
        m.insert("pwrite64", 18);
        m.insert("readv", 19);
        m.insert("writev", 20);
        m.insert("access", 21);
        m.insert("pipe", 22);
        m.insert("select", 23);
        m.insert("sched_yield", 24);
        m.insert("mremap", 25);
        m.insert("msync", 26);
        m.insert("mincore", 27);
        m.insert("madvise", 28);
        m.insert("shmget", 29);
        m.insert("shmat", 30);
        m.insert("shmctl", 31);
        m.insert("dup", 32);
        m.insert("dup2", 33);
        m.insert("pause", 34);
        m.insert("nanosleep", 35);
        m.insert("getitimer", 36);
        m.insert("alarm", 37);
        m.insert("setitimer", 38);
        m.insert("getpid", 39);
        m.insert("sendfile", 40);
        m.insert("socket", 41);
        m.insert("connect", 42);
        m.insert("accept", 43);
        m.insert("sendto", 44);
        m.insert("recvfrom", 45);
        m.insert("sendmsg", 46);
        m.insert("recvmsg", 47);
        m.insert("shutdown", 48);
        m.insert("bind", 49);
        m.insert("listen", 50);
        m.insert("getsockname", 51);
        m.insert("getpeername", 52);
        m.insert("socketpair", 53);
        m.insert("setsockopt", 54);
        m.insert("getsockopt", 55);
        m.insert("clone", 56);
        m.insert("fork", 57);
        m.insert("vfork", 58);
        m.insert("execve", 59);
        m.insert("exit", 60);
        m.insert("wait4", 61);
        m.insert("kill", 62);
        m.insert("uname", 63);
        m.insert("semget", 64);
        m.insert("semop", 65);
        m.insert("semctl", 66);
        m.insert("msgsnd", 69);
        m.insert("msgrcv", 70);
        m.insert("msgctl", 71);
        m.insert("fcntl", 72);
        m.insert("flock", 73);
        m.insert("fsync", 74);
        m.insert("fdatasync", 75);
        m.insert("truncate", 76);
        m.insert("ftruncate", 77);
        m.insert("getdents", 78);
        m.insert("getcwd", 79);
        m.insert("chdir", 80);
        m.insert("fchdir", 81);
        m.insert("rename", 82);
        m.insert("mkdir", 83);
        m.insert("rmdir", 84);
        m.insert("creat", 85);
        m.insert("link", 86);
        m.insert("unlink", 87);
        m.insert("symlink", 88);
        m.insert("readlink", 89);
        m.insert("chmod", 90);
        m.insert("fchmod", 91);
        m.insert("chown", 92);
        m.insert("fchown", 93);
        m.insert("lchown", 94);
        m.insert("umask", 95);
        m.insert("gettimeofday", 96);
        m.insert("getrlimit", 97);
        m.insert("getrusage", 98);
        m.insert("sysinfo", 99);
        m.insert("times", 100);
        m.insert("ptrace", 101);
        m.insert("getuid", 102);
        m.insert("syslog", 103);
        m.insert("getgid", 104);
        m.insert("setuid", 105);
        m.insert("setgid", 106);
        m.insert("geteuid", 107);
        m.insert("getegid", 108);
        m.insert("setpgid", 109);
        m.insert("getppid", 110);
        m.insert("getpgrp", 111);
        m.insert("setreuid", 113);
        m.insert("setregid", 114);
        m.insert("getgroups", 115);
        m.insert("setgroups", 116);
        m.insert("setresuid", 117);
        m.insert("getresuid", 118);
        m.insert("setresgid", 119);
        m.insert("getresgid", 120);
        m.insert("getpgid", 121);
        m.insert("setfsuid", 122);
        m.insert("setfsgid", 123);
        m.insert("getsid", 124);
        m.insert("capget", 125);
        m.insert("capset", 126);
        m.insert("rt_sigpending", 127);
        m.insert("rt_sigtimedwait", 128);
        m.insert("rt_sigqueueinfo", 129);
        m.insert("rt_sigsuspend", 130);
        m.insert("sigaltstack", 131);
        m.insert("utime", 132);
        m.insert("mknod", 133);
        m.insert("uselib", 134);
        m.insert("personality", 135);
        m.insert("ustat", 136);
        m.insert("statfs", 137);
        m.insert("fstatfs", 138);
        m.insert("sysfs", 139);
        m.insert("getpriority", 140);
        m.insert("setpriority", 141);
        m.insert("sched_setparam", 142);
        m.insert("sched_getparam", 143);
        m.insert("sched_setscheduler", 144);
        m.insert("sched_getscheduler", 145);
        m.insert("sched_get_priority_max", 146);
        m.insert("sched_get_priority_min", 147);
        m.insert("sched_rr_get_interval", 148);
        m.insert("mlock", 149);
        m.insert("munlock", 150);
        m.insert("mlockall", 151);
        m.insert("munlockall", 152);
        m.insert("vhangup", 153);
        m.insert("modify_ldt", 154);
        m.insert("pivot_root", 155);
        m.insert("_sysctl", 156);
        m.insert("prctl", 157);
        m.insert("arch_prctl", 158);
        m.insert("adjtimex", 159);
        m.insert("setrlimit", 160);
        m.insert("chroot", 161);
        m.insert("sync", 162);
        m.insert("acct", 163);
        m.insert("settimeofday", 164);
        m.insert("mount", 165);
        m.insert("umount2", 166);
        m.insert("swapon", 167);
        m.insert("swapoff", 168);
        m.insert("reboot", 169);
        m.insert("sethostname", 170);
        m.insert("setdomainname", 171);
        m.insert("iopl", 172);
        m.insert("ioperm", 173);
        m.insert("create_module", 174);
        m.insert("init_module", 175);
        m.insert("delete_module", 176);
        m.insert("get_kernel_syms", 177);
        m.insert("query_module", 178);
        m.insert("quotactl", 179);
        m.insert("nfsservctl", 180);
        m.insert("getpmsg", 181);
        m.insert("putpmsg", 182);
        m.insert("afs_syscall", 183);
        m.insert("tuxcall", 184);
        m.insert("security", 185);
        m.insert("gettid", 186);
        m.insert("readahead", 187);
        m.insert("setxattr", 188);
        m.insert("lsetxattr", 189);
        m.insert("fsetxattr", 190);
        m.insert("getxattr", 191);
        m.insert("lgetxattr", 192);
        m.insert("fgetxattr", 193);
        m.insert("listxattr", 194);
        m.insert("llistxattr", 195);
        m.insert("flistxattr", 196);
        m.insert("removexattr", 197);
        m.insert("lremovexattr", 198);
        m.insert("fremovexattr", 199);
        m.insert("tkill", 200);
        m.insert("time", 201);
        m.insert("futex", 202);
        m.insert("sched_setaffinity", 203);
        m.insert("sched_getaffinity", 204);
        m.insert("set_thread_area", 205);
        m.insert("io_setup", 206);
        m.insert("io_destroy", 207);
        m.insert("io_getevents", 208);
        m.insert("io_submit", 209);
        m.insert("io_cancel", 210);
        m.insert("get_thread_area", 211);
        m.insert("lookup_dcookie", 212);
        m.insert("epoll_create", 213);
        m.insert("epoll_ctl_old", 214);
        m.insert("epoll_wait_old", 215);
        m.insert("remap_file_pages", 216);
        m.insert("getdents64", 217);
        m.insert("set_tid_address", 218);
        m.insert("restart_syscall", 219);
        m.insert("semtimedop", 220);
        m.insert("fadvise64", 221);
        m.insert("timer_create", 222);
        m.insert("timer_settime", 223);
        m.insert("timer_gettime", 224);
        m.insert("timer_getoverrun", 225);
        m.insert("timer_delete", 226);
        m.insert("clock_settime", 227);
        m.insert("clock_gettime", 228);
        m.insert("clock_getres", 229);
        m.insert("clock_nanosleep", 230);
        m.insert("exit_group", 231);
        m.insert("epoll_wait", 232);
        m.insert("epoll_ctl", 233);
        m.insert("tgkill", 234);
        m.insert("utimes", 235);
        m.insert("vserver", 236);
        m.insert("mbind", 237);
        m.insert("set_mempolicy", 238);
        m.insert("get_mempolicy", 239);
        m.insert("mq_open", 240);
        m.insert("mq_unlink", 241);
        m.insert("mq_timedsend", 242);
        m.insert("mq_timedreceive", 243);
        m.insert("mq_notify", 244);
        m.insert("mq_getsetattr", 245);
        m.insert("kexec_load", 246);
        m.insert("waitid", 247);
        m.insert("add_key", 248);
        m.insert("request_key", 249);
        m.insert("keyctl", 250);
        m.insert("ioprio_set", 251);
        m.insert("ioprio_get", 252);
        m.insert("inotify_init", 253);
        m.insert("inotify_add_watch", 254);
        m.insert("inotify_rm_watch", 255);
        m.insert("migrate_pages", 256);
        m.insert("openat", 257);
        m.insert("mkdirat", 258);
        m.insert("mknodat", 259);
        m.insert("fchownat", 260);
        m.insert("futimesat", 261);
        m.insert("newfstatat", 262);
        m.insert("unlinkat", 263);
        m.insert("renameat", 264);
        m.insert("linkat", 265);
        m.insert("symlinkat", 266);
        m.insert("readlinkat", 267);
        m.insert("fchmodat", 268);
        m.insert("faccessat", 269);
        m.insert("pselect6", 270);
        m.insert("ppoll", 271);
        m.insert("unshare", 272);
        m.insert("set_robust_list", 273);
        m.insert("get_robust_list", 274);
        m.insert("splice", 275);
        m.insert("tee", 276);
        m.insert("sync_file_range", 277);
        m.insert("vmsplice", 278);
        m.insert("move_pages", 279);
        m.insert("utimensat", 280);
        m.insert("epoll_pwait", 281);
        m.insert("signalfd", 282);
        m.insert("timerfd_create", 283);
        m.insert("eventfd", 284);
        m.insert("fallocate", 285);
        m.insert("timerfd_settime", 286);
        m.insert("timerfd_gettime", 287);
        m.insert("accept4", 288);
        m.insert("signalfd4", 289);
        m.insert("eventfd2", 290);
        m.insert("epoll_create1", 291);
        m.insert("dup3", 292);
        m.insert("pipe2", 293);
        m.insert("inotify_init1", 294);
        m.insert("preadv", 295);
        m.insert("pwritev", 296);
        m.insert("rt_tgsigqueueinfo", 297);
        m.insert("perf_event_open", 298);
        m.insert("recvmmsg", 299);
        m.insert("fanotify_init", 300);
        m.insert("fanotify_mark", 301);
        m.insert("prlimit64", 302);
        m.insert("name_to_handle_at", 303);
        m.insert("open_by_handle_at", 304);
        m.insert("clock_adjtime", 305);
        m.insert("syncfs", 306);
        m.insert("sendmmsg", 307);
        m.insert("setns", 308);
        m.insert("getcpu", 309);
        m.insert("process_vm_readv", 310);
        m.insert("process_vm_writev", 311);
        m.insert("kcmp", 312);
        m.insert("finit_module", 313);
        m.insert("sched_setattr", 314);
        m.insert("sched_getattr", 315);
        m.insert("renameat2", 316);
        m.insert("seccomp", 317);
        m.insert("getrandom", 318);
        m.insert("memfd_create", 319);
        m.insert("kexec_file_load", 320);
        m.insert("bpf", 321);
        m.insert("execveat", 322);
        m.insert("userfaultfd", 323);
        m.insert("membarrier", 324);
        m.insert("mlock2", 325);
        m.insert("copy_file_range", 326);
        m.insert("preadv2", 327);
        m.insert("pwritev2", 328);
        m.insert("pkey_mprotect", 329);
        m.insert("pkey_alloc", 330);
        m.insert("pkey_free", 331);
        m.insert("statx", 332);

        m
    };
}
